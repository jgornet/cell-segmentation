apiVersion: apps/v1
kind: Deployment
metadata:
  name: webserver
  labels:
    app: webserver
spec:
  replicas: 1
  selector:
    matchLabels:
      app: webserver
  template:
    metadata:
      labels:
        app: webserver
    spec:
      containers:
      - name: webserver
        image: ghcr.io/jgornet/cell-segmentation/cell-segmentation-webserver
        ports:
        - containerPort: 5000
        env:
        - name: S3_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: aws-s3-secret
              key: S3_ACCESS_KEY_ID
        - name: S3_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: aws-s3-secret
              key: S3_SECRET_ACCESS_KEY
        - name: REDIS_HOST
          value: "redis-tls-service"
        - name: REDIS_PORT
          value: "6379"
        - name: RABBITMQ_URL
          value: "amqp://guest:guest@rabbitmq-service:5672/celery_vhost"
        volumeMounts:
        - name: redis-tls
          mountPath: /etc/redis/tls
          readOnly: true
      volumes:
      - name: redis-tls
        secret:
          secretName: celery-redis-tls-secret
      imagePullSecrets:
      - name: regcred
---
apiVersion: v1
kind: Service
metadata:
  name: webserver
spec:
  ports:
  - port: 80
    targetPort: 5000
    protocol: TCP
  selector:
    app: webserver
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: webserver
  annotations:
    cert-manager.io/issuer: "letsencrypt-prod"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - cell-segmentation.jamesgornet.com
    secretName: cell-segmentation-tls
  rules:
  - host: cell-segmentation.jamesgornet.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: webserver
            port:
              number: 80